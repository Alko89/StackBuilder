//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace treeDiM.PLMPack.DBClient.PLMPackSR {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCUser", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCGroup", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCUser[] MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCUser[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCCardboadFormat", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCCardboadFormat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCCardboardProfile", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCCardboardProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMajorationSetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThicknessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMajorationSets {
            get {
                return this.HasMajorationSetsField;
            }
            set {
                if ((this.HasMajorationSetsField.Equals(value) != true)) {
                    this.HasMajorationSetsField = value;
                    this.RaisePropertyChanged("HasMajorationSets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eMoveDir", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    public enum eMoveDir : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Up = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Down = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCFile", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCThumbnail", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCThumbnail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCTreeNode", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCTreeNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ComponentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCFile DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChildrensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.NodeType NodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentNodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail ThumbnailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ComponentID {
            get {
                return this.ComponentIDField;
            }
            set {
                if ((this.ComponentIDField.Equals(value) != true)) {
                    this.ComponentIDField = value;
                    this.RaisePropertyChanged("ComponentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCFile Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChildrens {
            get {
                return this.HasChildrensField;
            }
            set {
                if ((this.HasChildrensField.Equals(value) != true)) {
                    this.HasChildrensField = value;
                    this.RaisePropertyChanged("HasChildrens");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.NodeType NodeType {
            get {
                return this.NodeTypeField;
            }
            set {
                if ((this.NodeTypeField.Equals(value) != true)) {
                    this.NodeTypeField = value;
                    this.RaisePropertyChanged("NodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentNodeID {
            get {
                return this.ParentNodeIDField;
            }
            set {
                if ((this.ParentNodeIDField.Equals(value) != true)) {
                    this.ParentNodeIDField = value;
                    this.RaisePropertyChanged("ParentNodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeType", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    public enum NodeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NTBranch = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NTDocument = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NTComponent = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCMajorationSet", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCMajorationSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCMajoration[] MajorationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile ProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCMajoration[] Majorations {
            get {
                return this.MajorationsField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorationsField, value) != true)) {
                    this.MajorationsField = value;
                    this.RaisePropertyChanged("Majorations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCMajoration", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCMajoration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCParamDefaultValue", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCParamDefaultValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VBoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> VDoubleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VIntField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VBool {
            get {
                return this.VBoolField;
            }
            set {
                if ((this.VBoolField.Equals(value) != true)) {
                    this.VBoolField = value;
                    this.RaisePropertyChanged("VBool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> VDouble {
            get {
                return this.VDoubleField;
            }
            set {
                if ((this.VDoubleField.Equals(value) != true)) {
                    this.VDoubleField = value;
                    this.RaisePropertyChanged("VDouble");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VInt {
            get {
                return this.VIntField;
            }
            set {
                if ((this.VIntField.Equals(value) != true)) {
                    this.VIntField = value;
                    this.RaisePropertyChanged("VInt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCComponent", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet[] MajoSetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] ParamDefaultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CGuid {
            get {
                return this.CGuidField;
            }
            set {
                if ((this.CGuidField.Equals(value) != true)) {
                    this.CGuidField = value;
                    this.RaisePropertyChanged("CGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet[] MajoSets {
            get {
                return this.MajoSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.MajoSetsField, value) != true)) {
                    this.MajoSetsField = value;
                    this.RaisePropertyChanged("MajoSets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] ParamDefaults {
            get {
                return this.ParamDefaultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamDefaultsField, value) != true)) {
                    this.ParamDefaultsField = value;
                    this.RaisePropertyChanged("ParamDefaults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    public enum DCSBTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPallet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPalletCorner = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPalletCap = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPalletFilm = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TInterlayer = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCase = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TBundle = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCylinder = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TTruck = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBPallet", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBPallet : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AdmissibleLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalletTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AdmissibleLoad {
            get {
                return this.AdmissibleLoadField;
            }
            set {
                if ((this.AdmissibleLoadField.Equals(value) != true)) {
                    this.AdmissibleLoadField = value;
                    this.RaisePropertyChanged("AdmissibleLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D Dimensions {
            get {
                return this.DimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true)) {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PalletType {
            get {
                return this.PalletTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PalletTypeField, value) != true)) {
                    this.PalletTypeField = value;
                    this.RaisePropertyChanged("PalletType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBItem", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet))]
    public partial class DCSBItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoInsertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoInsert {
            get {
                return this.AutoInsertField;
            }
            set {
                if ((this.AutoInsertField.Equals(value) != true)) {
                    this.AutoInsertField = value;
                    this.RaisePropertyChanged("AutoInsert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitSystem {
            get {
                return this.UnitSystemField;
            }
            set {
                if ((this.UnitSystemField.Equals(value) != true)) {
                    this.UnitSystemField = value;
                    this.RaisePropertyChanged("UnitSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBPalletCap", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBPalletCap : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsInnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsOuterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsInner {
            get {
                return this.DimensionsInnerField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsInnerField, value) != true)) {
                    this.DimensionsInnerField = value;
                    this.RaisePropertyChanged("DimensionsInner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsOuter {
            get {
                return this.DimensionsOuterField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsOuterField, value) != true)) {
                    this.DimensionsOuterField = value;
                    this.RaisePropertyChanged("DimensionsOuter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBPalletFilm", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBPalletFilm : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HatchingAngleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HatchingSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseHatchingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseTransparencyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HatchingAngle {
            get {
                return this.HatchingAngleField;
            }
            set {
                if ((this.HatchingAngleField.Equals(value) != true)) {
                    this.HatchingAngleField = value;
                    this.RaisePropertyChanged("HatchingAngle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HatchingSpace {
            get {
                return this.HatchingSpaceField;
            }
            set {
                if ((this.HatchingSpaceField.Equals(value) != true)) {
                    this.HatchingSpaceField = value;
                    this.RaisePropertyChanged("HatchingSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseHatching {
            get {
                return this.UseHatchingField;
            }
            set {
                if ((this.UseHatchingField.Equals(value) != true)) {
                    this.UseHatchingField = value;
                    this.RaisePropertyChanged("UseHatching");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseTransparency {
            get {
                return this.UseTransparencyField;
            }
            set {
                if ((this.UseTransparencyField.Equals(value) != true)) {
                    this.UseTransparencyField = value;
                    this.RaisePropertyChanged("UseTransparency");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBPalletCorner", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBPalletCorner : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBInterlayer", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBInterlayer : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D Dimensions {
            get {
                return this.DimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true)) {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBCase", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBCase : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ColorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsInnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsOuterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasInnerDimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> NetWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TapeColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TapeWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Colors {
            get {
                return this.ColorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorsField, value) != true)) {
                    this.ColorsField = value;
                    this.RaisePropertyChanged("Colors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsInner {
            get {
                return this.DimensionsInnerField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsInnerField, value) != true)) {
                    this.DimensionsInnerField = value;
                    this.RaisePropertyChanged("DimensionsInner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsOuter {
            get {
                return this.DimensionsOuterField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsOuterField, value) != true)) {
                    this.DimensionsOuterField = value;
                    this.RaisePropertyChanged("DimensionsOuter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasInnerDims {
            get {
                return this.HasInnerDimsField;
            }
            set {
                if ((this.HasInnerDimsField.Equals(value) != true)) {
                    this.HasInnerDimsField = value;
                    this.RaisePropertyChanged("HasInnerDims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCase {
            get {
                return this.IsCaseField;
            }
            set {
                if ((this.IsCaseField.Equals(value) != true)) {
                    this.IsCaseField = value;
                    this.RaisePropertyChanged("IsCase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> NetWeight {
            get {
                return this.NetWeightField;
            }
            set {
                if ((this.NetWeightField.Equals(value) != true)) {
                    this.NetWeightField = value;
                    this.RaisePropertyChanged("NetWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTape {
            get {
                return this.ShowTapeField;
            }
            set {
                if ((this.ShowTapeField.Equals(value) != true)) {
                    this.ShowTapeField = value;
                    this.RaisePropertyChanged("ShowTape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TapeColor {
            get {
                return this.TapeColorField;
            }
            set {
                if ((this.TapeColorField.Equals(value) != true)) {
                    this.TapeColorField = value;
                    this.RaisePropertyChanged("TapeColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TapeWidth {
            get {
                return this.TapeWidthField;
            }
            set {
                if ((this.TapeWidthField.Equals(value) != true)) {
                    this.TapeWidthField = value;
                    this.RaisePropertyChanged("TapeWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBBundle", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBBundle : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitWeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsUnit {
            get {
                return this.DimensionsUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsUnitField, value) != true)) {
                    this.DimensionsUnitField = value;
                    this.RaisePropertyChanged("DimensionsUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitWeight {
            get {
                return this.UnitWeightField;
            }
            set {
                if ((this.UnitWeightField.Equals(value) != true)) {
                    this.UnitWeightField = value;
                    this.RaisePropertyChanged("UnitWeight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBCylinder", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBCylinder : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorInnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorOuterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorTopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> NetWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusInnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusOuterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorInner {
            get {
                return this.ColorInnerField;
            }
            set {
                if ((this.ColorInnerField.Equals(value) != true)) {
                    this.ColorInnerField = value;
                    this.RaisePropertyChanged("ColorInner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorOuter {
            get {
                return this.ColorOuterField;
            }
            set {
                if ((this.ColorOuterField.Equals(value) != true)) {
                    this.ColorOuterField = value;
                    this.RaisePropertyChanged("ColorOuter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorTop {
            get {
                return this.ColorTopField;
            }
            set {
                if ((this.ColorTopField.Equals(value) != true)) {
                    this.ColorTopField = value;
                    this.RaisePropertyChanged("ColorTop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> NetWeight {
            get {
                return this.NetWeightField;
            }
            set {
                if ((this.NetWeightField.Equals(value) != true)) {
                    this.NetWeightField = value;
                    this.RaisePropertyChanged("NetWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RadiusInner {
            get {
                return this.RadiusInnerField;
            }
            set {
                if ((this.RadiusInnerField.Equals(value) != true)) {
                    this.RadiusInnerField = value;
                    this.RaisePropertyChanged("RadiusInner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RadiusOuter {
            get {
                return this.RadiusOuterField;
            }
            set {
                if ((this.RadiusOuterField.Equals(value) != true)) {
                    this.RadiusOuterField = value;
                    this.RaisePropertyChanged("RadiusOuter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBTruck", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBTruck : treeDiM.PLMPack.DBClient.PLMPackSR.DCSBItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AdmissibleLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsInnerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdmissibleLoad {
            get {
                return this.AdmissibleLoadField;
            }
            set {
                if ((this.AdmissibleLoadField.Equals(value) != true)) {
                    this.AdmissibleLoadField = value;
                    this.RaisePropertyChanged("AdmissibleLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBDim3D DimensionsInner {
            get {
                return this.DimensionsInnerField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsInnerField, value) != true)) {
                    this.DimensionsInnerField = value;
                    this.RaisePropertyChanged("DimensionsInner");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCSBDim3D", Namespace="http://schemas.datacontract.org/2004/07/PLMPack")]
    [System.SerializableAttribute()]
    public partial class DCSBDim3D : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double M0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double M1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double M2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double M0 {
            get {
                return this.M0Field;
            }
            set {
                if ((this.M0Field.Equals(value) != true)) {
                    this.M0Field = value;
                    this.RaisePropertyChanged("M0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double M1 {
            get {
                return this.M1Field;
            }
            set {
                if ((this.M1Field.Equals(value) != true)) {
                    this.M1Field = value;
                    this.RaisePropertyChanged("M1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double M2 {
            get {
                return this.M2Field;
            }
            set {
                if ((this.M2Field.Equals(value) != true)) {
                    this.M2Field = value;
                    this.RaisePropertyChanged("M2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PLMPackSR.IPLMPackService")]
    public interface IPLMPackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/get_UserName", ReplyAction="http://tempuri.org/IPLMPackService/get_UserNameResponse")]
        string get_UserName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/get_UserName", ReplyAction="http://tempuri.org/IPLMPackService/get_UserNameResponse")]
        System.Threading.Tasks.Task<string> get_UserNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetUser", ReplyAction="http://tempuri.org/IPLMPackService/GetUserResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCUser GetUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetUser", ReplyAction="http://tempuri.org/IPLMPackService/GetUserResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCUser> GetUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/Connect", ReplyAction="http://tempuri.org/IPLMPackService/ConnectResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCUser Connect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/Connect", ReplyAction="http://tempuri.org/IPLMPackService/ConnectResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCUser> ConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/DisConnect", ReplyAction="http://tempuri.org/IPLMPackService/DisConnectResponse")]
        void DisConnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/DisConnect", ReplyAction="http://tempuri.org/IPLMPackService/DisConnectResponse")]
        System.Threading.Tasks.Task DisConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UserExists", ReplyAction="http://tempuri.org/IPLMPackService/UserExistsResponse")]
        bool UserExists(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UserExists", ReplyAction="http://tempuri.org/IPLMPackService/UserExistsResponse")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/EmailToUserName", ReplyAction="http://tempuri.org/IPLMPackService/EmailToUserNameResponse")]
        string EmailToUserName(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/EmailToUserName", ReplyAction="http://tempuri.org/IPLMPackService/EmailToUserNameResponse")]
        System.Threading.Tasks.Task<string> EmailToUserNameAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UserNameToEmail", ReplyAction="http://tempuri.org/IPLMPackService/UserNameToEmailResponse")]
        string UserNameToEmail(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UserNameToEmail", ReplyAction="http://tempuri.org/IPLMPackService/UserNameToEmailResponse")]
        System.Threading.Tasks.Task<string> UserNameToEmailAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SendLostPasswordEmail", ReplyAction="http://tempuri.org/IPLMPackService/SendLostPasswordEmailResponse")]
        bool SendLostPasswordEmail(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SendLostPasswordEmail", ReplyAction="http://tempuri.org/IPLMPackService/SendLostPasswordEmailResponse")]
        System.Threading.Tasks.Task<bool> SendLostPasswordEmailAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/get_UserSettingMajoRounding", ReplyAction="http://tempuri.org/IPLMPackService/get_UserSettingMajoRoundingResponse")]
        int get_UserSettingMajoRounding();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/get_UserSettingMajoRounding", ReplyAction="http://tempuri.org/IPLMPackService/get_UserSettingMajoRoundingResponse")]
        System.Threading.Tasks.Task<int> get_UserSettingMajoRoundingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/set_UserSettingMajoRounding", ReplyAction="http://tempuri.org/IPLMPackService/set_UserSettingMajoRoundingResponse")]
        void set_UserSettingMajoRounding(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/set_UserSettingMajoRounding", ReplyAction="http://tempuri.org/IPLMPackService/set_UserSettingMajoRoundingResponse")]
        System.Threading.Tasks.Task set_UserSettingMajoRoundingAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateUser", ReplyAction="http://tempuri.org/IPLMPackService/CreateUserResponse")]
        bool CreateUser(string userName, string password, string firstName, string lastName, string email, string country, string city, string phoneNumber, string companyName, string webSiteURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateUser", ReplyAction="http://tempuri.org/IPLMPackService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(string userName, string password, string firstName, string lastName, string email, string country, string city, string phoneNumber, string companyName, string webSiteURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateGroup", ReplyAction="http://tempuri.org/IPLMPackService/CreateGroupResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup CreateGroup(string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateGroup", ReplyAction="http://tempuri.org/IPLMPackService/CreateGroupResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> CreateGroupAsync(string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/GetCurrentGroupResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup GetCurrentGroup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/GetCurrentGroupResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> GetCurrentGroupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SetCurrentGroupByID", ReplyAction="http://tempuri.org/IPLMPackService/SetCurrentGroupByIDResponse")]
        void SetCurrentGroupByID(string grpId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SetCurrentGroupByID", ReplyAction="http://tempuri.org/IPLMPackService/SetCurrentGroupByIDResponse")]
        System.Threading.Tasks.Task SetCurrentGroupByIDAsync(string grpId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SetCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/SetCurrentGroupResponse")]
        void SetCurrentGroup(treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup grp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SetCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/SetCurrentGroupResponse")]
        System.Threading.Tasks.Task SetCurrentGroupAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup grp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/AddInterest", ReplyAction="http://tempuri.org/IPLMPackService/AddInterestResponse")]
        void AddInterest(string grpId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/AddInterest", ReplyAction="http://tempuri.org/IPLMPackService/AddInterestResponse")]
        System.Threading.Tasks.Task AddInterestAsync(string grpId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveInterest", ReplyAction="http://tempuri.org/IPLMPackService/RemoveInterestResponse")]
        void RemoveInterest(string grpId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveInterest", ReplyAction="http://tempuri.org/IPLMPackService/RemoveInterestResponse")]
        System.Threading.Tasks.Task RemoveInterestAsync(string grpId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetGroupByName", ReplyAction="http://tempuri.org/IPLMPackService/GetGroupByNameResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup GetGroupByName(string grpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetGroupByName", ReplyAction="http://tempuri.org/IPLMPackService/GetGroupByNameResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> GetGroupByNameAsync(string grpName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetGroupEveryone", ReplyAction="http://tempuri.org/IPLMPackService/GetGroupEveryoneResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup GetGroupEveryone();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetGroupEveryone", ReplyAction="http://tempuri.org/IPLMPackService/GetGroupEveryoneResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> GetGroupEveryoneAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetUserGroups", ReplyAction="http://tempuri.org/IPLMPackService/GetUserGroupsResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] GetUserGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetUserGroups", ReplyAction="http://tempuri.org/IPLMPackService/GetUserGroupsResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[]> GetUserGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllGroups", ReplyAction="http://tempuri.org/IPLMPackService/GetAllGroupsResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] GetAllGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllGroups", ReplyAction="http://tempuri.org/IPLMPackService/GetAllGroupsResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[]> GetAllGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetGroupsList", ReplyAction="http://tempuri.org/IPLMPackService/GetGroupsListResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListResponse GetGroupsList(treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetGroupsList", ReplyAction="http://tempuri.org/IPLMPackService/GetGroupsListResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListResponse> GetGroupsListAsync(treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/AddUserToCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/AddUserToCurrentGroupResponse")]
        void AddUserToCurrentGroup(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/AddUserToCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/AddUserToCurrentGroupResponse")]
        System.Threading.Tasks.Task AddUserToCurrentGroupAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveUserFromCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/RemoveUserFromCurrentGroupResponse")]
        void RemoveUserFromCurrentGroup(treeDiM.PLMPack.DBClient.PLMPackSR.DCUser dcUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveUserFromCurrentGroup", ReplyAction="http://tempuri.org/IPLMPackService/RemoveUserFromCurrentGroupResponse")]
        System.Threading.Tasks.Task RemoveUserFromCurrentGroupAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCUser dcUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCardboardFormats", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCardboardFormatsResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat[] GetAllCardboardFormats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCardboardFormats", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCardboardFormatsResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat[]> GetAllCardboardFormatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardFormatByID", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardFormatByIDResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat GetCardboardFormatByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardFormatByID", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardFormatByIDResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> GetCardboardFormatByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CardboardFormatExists", ReplyAction="http://tempuri.org/IPLMPackService/CardboardFormatExistsResponse")]
        bool CardboardFormatExists(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CardboardFormatExists", ReplyAction="http://tempuri.org/IPLMPackService/CardboardFormatExistsResponse")]
        System.Threading.Tasks.Task<bool> CardboardFormatExistsAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardFormatByName", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardFormatByNameResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat GetCardboardFormatByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardFormatByName", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardFormatByNameResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> GetCardboardFormatByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCardboardFormat", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCardboardFormatResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat CreateNewCardboardFormat(string name, string description, double length, double width);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCardboardFormat", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCardboardFormatResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> CreateNewCardboardFormatAsync(string name, string description, double length, double width);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveCardboardFormat", ReplyAction="http://tempuri.org/IPLMPackService/RemoveCardboardFormatResponse")]
        void RemoveCardboardFormat(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveCardboardFormat", ReplyAction="http://tempuri.org/IPLMPackService/RemoveCardboardFormatResponse")]
        System.Threading.Tasks.Task RemoveCardboardFormatAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateCardboardFormat", ReplyAction="http://tempuri.org/IPLMPackService/UpdateCardboardFormatResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat UpdateCardboardFormat(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateCardboardFormat", ReplyAction="http://tempuri.org/IPLMPackService/UpdateCardboardFormatResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> UpdateCardboardFormatAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCardboardProfileResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile[] GetAllCardboardProfile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCardboardProfileResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile[]> GetAllCardboardProfileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardProfileByID", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardProfileByIDResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile GetCardboardProfileByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardProfileByID", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardProfileByIDResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> GetCardboardProfileByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CardboardProfileExists", ReplyAction="http://tempuri.org/IPLMPackService/CardboardProfileExistsResponse")]
        bool CardboardProfileExists(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CardboardProfileExists", ReplyAction="http://tempuri.org/IPLMPackService/CardboardProfileExistsResponse")]
        System.Threading.Tasks.Task<bool> CardboardProfileExistsAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardProfileByName", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardProfileByNameResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile GetCardboardProfileByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetCardboardProfileByName", ReplyAction="http://tempuri.org/IPLMPackService/GetCardboardProfileByNameResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> GetCardboardProfileByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCardboardProfileResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile CreateNewCardboardProfile(string name, string description, string code, double thickness);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCardboardProfileResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> CreateNewCardboardProfileAsync(string name, string description, string code, double thickness);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/RemoveCardboardProfileResponse")]
        void RemoveCardboardProfile(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/RemoveCardboardProfileResponse")]
        System.Threading.Tasks.Task RemoveCardboardProfileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/UpdateCardboardProfileResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile UpdateCardboardProfile(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/UpdateCardboardProfileResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> UpdateCardboardProfileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/MoveCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/MoveCardboardProfileResponse")]
        void MoveCardboardProfile(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile, treeDiM.PLMPack.DBClient.PLMPackSR.eMoveDir dir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/MoveCardboardProfile", ReplyAction="http://tempuri.org/IPLMPackService/MoveCardboardProfileResponse")]
        System.Threading.Tasks.Task MoveCardboardProfileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile, treeDiM.PLMPack.DBClient.PLMPackSR.eMoveDir dir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewFile", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewFileResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCFile CreateNewFile(System.Guid g, string ext, long size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewFile", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewFileResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCFile> CreateNewFileAsync(System.Guid g, string ext, long size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/FileQuotaReached", ReplyAction="http://tempuri.org/IPLMPackService/FileQuotaReachedResponse")]
        bool FileQuotaReached(long fileSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/FileQuotaReached", ReplyAction="http://tempuri.org/IPLMPackService/FileQuotaReachedResponse")]
        System.Threading.Tasks.Task<bool> FileQuotaReachedAsync(long fileSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetDiskQuota", ReplyAction="http://tempuri.org/IPLMPackService/GetDiskQuotaResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaResponse GetDiskQuota(treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetDiskQuota", ReplyAction="http://tempuri.org/IPLMPackService/GetDiskQuotaResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaResponse> GetDiskQuotaAsync(treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UploadDefault", ReplyAction="http://tempuri.org/IPLMPackService/UploadDefaultResponse")]
        System.Guid UploadDefault(string defName, string fileExt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UploadDefault", ReplyAction="http://tempuri.org/IPLMPackService/UploadDefaultResponse")]
        System.Threading.Tasks.Task<System.Guid> UploadDefaultAsync(string defName, string fileExt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewThumbnailFromFile", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewThumbnailFromFileResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail CreateNewThumbnailFromFile(treeDiM.PLMPack.DBClient.PLMPackSR.DCFile file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewThumbnailFromFile", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewThumbnailFromFileResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> CreateNewThumbnailFromFileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCFile file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewThumbnail", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewThumbnailResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail CreateNewThumbnail(System.Guid g, string ext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewThumbnail", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewThumbnailResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> CreateNewThumbnailAsync(System.Guid g, string ext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetDefaultThumbnail", ReplyAction="http://tempuri.org/IPLMPackService/GetDefaultThumbnailResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail GetDefaultThumbnail(string defName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetDefaultThumbnail", ReplyAction="http://tempuri.org/IPLMPackService/GetDefaultThumbnailResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> GetDefaultThumbnailAsync(string defName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetThumbnailById", ReplyAction="http://tempuri.org/IPLMPackService/GetThumbnailByIdResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail GetThumbnailById(int thumbnailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetThumbnailById", ReplyAction="http://tempuri.org/IPLMPackService/GetThumbnailByIdResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> GetThumbnailByIdAsync(int thumbnailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetRootNodes", ReplyAction="http://tempuri.org/IPLMPackService/GetRootNodesResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[] GetRootNodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetRootNodes", ReplyAction="http://tempuri.org/IPLMPackService/GetRootNodesResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[]> GetRootNodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetUserRootNode", ReplyAction="http://tempuri.org/IPLMPackService/GetUserRootNodeResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode GetUserRootNode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetUserRootNode", ReplyAction="http://tempuri.org/IPLMPackService/GetUserRootNodeResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> GetUserRootNodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetNodeById", ReplyAction="http://tempuri.org/IPLMPackService/GetNodeByIdResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode GetNodeById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetNodeById", ReplyAction="http://tempuri.org/IPLMPackService/GetNodeByIdResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> GetNodeByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetTreeNodeChildrens", ReplyAction="http://tempuri.org/IPLMPackService/GetTreeNodeChildrensResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[] GetTreeNodeChildrens(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetTreeNodeChildrens", ReplyAction="http://tempuri.org/IPLMPackService/GetTreeNodeChildrensResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[]> GetTreeNodeChildrensAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CanCreateChildNode", ReplyAction="http://tempuri.org/IPLMPackService/CanCreateChildNodeResponse")]
        bool CanCreateChildNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CanCreateChildNode", ReplyAction="http://tempuri.org/IPLMPackService/CanCreateChildNodeResponse")]
        System.Threading.Tasks.Task<bool> CanCreateChildNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewNodeBranch", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewNodeBranchResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode CreateNewNodeBranch(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewNodeBranch", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewNodeBranchResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> CreateNewNodeBranchAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewNodeDocument", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewNodeDocumentResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode CreateNewNodeDocument(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile dFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewNodeDocument", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewNodeDocumentResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> CreateNewNodeDocumentAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile dFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewNodeComponent", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewNodeComponentResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode CreateNewNodeComponent(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile compFile, System.Guid compGuid, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet[] majorationSets, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] defaultValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewNodeComponent", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewNodeComponentResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> CreateNewNodeComponentAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile compFile, System.Guid compGuid, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet[] majorationSets, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] defaultValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/DeleteNode", ReplyAction="http://tempuri.org/IPLMPackService/DeleteNodeResponse")]
        void DeleteNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/DeleteNode", ReplyAction="http://tempuri.org/IPLMPackService/DeleteNodeResponse")]
        System.Threading.Tasks.Task DeleteNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/DeleteNodeByID", ReplyAction="http://tempuri.org/IPLMPackService/DeleteNodeByIDResponse")]
        void DeleteNodeByID(System.Guid tnID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/DeleteNodeByID", ReplyAction="http://tempuri.org/IPLMPackService/DeleteNodeByIDResponse")]
        System.Threading.Tasks.Task DeleteNodeByIDAsync(System.Guid tnID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RenameNode", ReplyAction="http://tempuri.org/IPLMPackService/RenameNodeResponse")]
        void RenameNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RenameNode", ReplyAction="http://tempuri.org/IPLMPackService/RenameNodeResponse")]
        System.Threading.Tasks.Task RenameNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RenameNodeByID", ReplyAction="http://tempuri.org/IPLMPackService/RenameNodeByIDResponse")]
        void RenameNodeByID(System.Guid tnID, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RenameNodeByID", ReplyAction="http://tempuri.org/IPLMPackService/RenameNodeByIDResponse")]
        System.Threading.Tasks.Task RenameNodeByIDAsync(System.Guid tnID, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/ShareTreeNode", ReplyAction="http://tempuri.org/IPLMPackService/ShareTreeNodeResponse")]
        void ShareTreeNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup dcGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/ShareTreeNode", ReplyAction="http://tempuri.org/IPLMPackService/ShareTreeNodeResponse")]
        System.Threading.Tasks.Task ShareTreeNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup dcGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/ShareEveryone", ReplyAction="http://tempuri.org/IPLMPackService/ShareEveryoneResponse")]
        void ShareEveryone(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/ShareEveryone", ReplyAction="http://tempuri.org/IPLMPackService/ShareEveryoneResponse")]
        System.Threading.Tasks.Task ShareEveryoneAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetBrothersWithExtension", ReplyAction="http://tempuri.org/IPLMPackService/GetBrothersWithExtensionResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[] GetBrothersWithExtension(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetBrothersWithExtension", ReplyAction="http://tempuri.org/IPLMPackService/GetBrothersWithExtensionResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[]> GetBrothersWithExtensionAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetComponentByGuid", ReplyAction="http://tempuri.org/IPLMPackService/GetComponentByGuidResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCComponent GetComponentByGuid(System.Guid g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetComponentByGuid", ReplyAction="http://tempuri.org/IPLMPackService/GetComponentByGuidResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCComponent> GetComponentByGuidAsync(System.Guid g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateParamDefaultValues", ReplyAction="http://tempuri.org/IPLMPackService/UpdateParamDefaultValuesResponse")]
        void UpdateParamDefaultValues(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] paramDefaultValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateParamDefaultValues", ReplyAction="http://tempuri.org/IPLMPackService/UpdateParamDefaultValuesResponse")]
        System.Threading.Tasks.Task UpdateParamDefaultValuesAsync(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] paramDefaultValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetParamDefaultValues", ReplyAction="http://tempuri.org/IPLMPackService/GetParamDefaultValuesResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] GetParamDefaultValues(System.Guid g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetParamDefaultValues", ReplyAction="http://tempuri.org/IPLMPackService/GetParamDefaultValuesResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[]> GetParamDefaultValuesAsync(System.Guid g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateMajorationSet", ReplyAction="http://tempuri.org/IPLMPackService/UpdateMajorationSetResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet UpdateMajorationSet(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet majorationSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/UpdateMajorationSet", ReplyAction="http://tempuri.org/IPLMPackService/UpdateMajorationSetResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet> UpdateMajorationSetAsync(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet majorationSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetMajorationSet", ReplyAction="http://tempuri.org/IPLMPackService/GetMajorationSetResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet GetMajorationSet(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetMajorationSet", ReplyAction="http://tempuri.org/IPLMPackService/GetMajorationSetResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet> GetMajorationSetAsync(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/ItemExists", ReplyAction="http://tempuri.org/IPLMPackService/ItemExistsResponse")]
        bool ItemExists(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/ItemExists", ReplyAction="http://tempuri.org/IPLMPackService/ItemExistsResponse")]
        System.Threading.Tasks.Task<bool> ItemExistsAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SetAutoInsert", ReplyAction="http://tempuri.org/IPLMPackService/SetAutoInsertResponse")]
        void SetAutoInsert(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID, bool autoInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/SetAutoInsert", ReplyAction="http://tempuri.org/IPLMPackService/SetAutoInsertResponse")]
        System.Threading.Tasks.Task SetAutoInsertAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID, bool autoInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveItemById", ReplyAction="http://tempuri.org/IPLMPackService/RemoveItemByIdResponse")]
        void RemoveItemById(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/RemoveItemById", ReplyAction="http://tempuri.org/IPLMPackService/RemoveItemByIdResponse")]
        System.Threading.Tasks.Task RemoveItemByIdAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPallets", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletsResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet[] GetAllPallets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPallets", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletsResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet[]> GetAllPalletsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPallet", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletResponse")]
        void CreateNewPallet(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet pallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPallet", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletResponse")]
        System.Threading.Tasks.Task CreateNewPalletAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet pallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPalletCaps", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletCapsResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap[] GetAllPalletCaps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPalletCaps", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletCapsResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap[]> GetAllPalletCapsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPalletCap", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletCapResponse")]
        void CreateNewPalletCap(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap palletCap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPalletCap", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletCapResponse")]
        System.Threading.Tasks.Task CreateNewPalletCapAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap palletCap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPalletFilms", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletFilmsResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm[] GetAllPalletFilms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPalletFilms", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletFilmsResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm[]> GetAllPalletFilmsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPalletFilm", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletFilmResponse")]
        void CreateNewPalletFilm(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm palletFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPalletFilm", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletFilmResponse")]
        System.Threading.Tasks.Task CreateNewPalletFilmAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm palletFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPalletCorners", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletCornersResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner[] GetAllPalletCorners();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllPalletCorners", ReplyAction="http://tempuri.org/IPLMPackService/GetAllPalletCornersResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner[]> GetAllPalletCornersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPalletCorner", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletCornerResponse")]
        void CreateNewPalletCorner(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner palletCorner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewPalletCorner", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewPalletCornerResponse")]
        System.Threading.Tasks.Task CreateNewPalletCornerAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner palletCorner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllInterlayers", ReplyAction="http://tempuri.org/IPLMPackService/GetAllInterlayersResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer[] GetAllInterlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllInterlayers", ReplyAction="http://tempuri.org/IPLMPackService/GetAllInterlayersResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer[]> GetAllInterlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewInterlayer", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewInterlayerResponse")]
        void CreateNewInterlayer(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer interlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewInterlayer", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewInterlayerResponse")]
        System.Threading.Tasks.Task CreateNewInterlayerAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer interlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCases", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCasesResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[] GetAllCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCases", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCasesResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[]> GetAllCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllBoxes", ReplyAction="http://tempuri.org/IPLMPackService/GetAllBoxesResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[] GetAllBoxes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllBoxes", ReplyAction="http://tempuri.org/IPLMPackService/GetAllBoxesResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[]> GetAllBoxesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCase", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCaseResponse")]
        void CreateNewCase(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase sbCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCase", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCaseResponse")]
        System.Threading.Tasks.Task CreateNewCaseAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase sbCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllBundles", ReplyAction="http://tempuri.org/IPLMPackService/GetAllBundlesResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle[] GetAllBundles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllBundles", ReplyAction="http://tempuri.org/IPLMPackService/GetAllBundlesResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle[]> GetAllBundlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewBundle", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewBundleResponse")]
        void CreateNewBundle(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle bundle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewBundle", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewBundleResponse")]
        System.Threading.Tasks.Task CreateNewBundleAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle bundle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCylinders", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCylindersResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder[] GetAllCylinders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllCylinders", ReplyAction="http://tempuri.org/IPLMPackService/GetAllCylindersResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder[]> GetAllCylindersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCylinder", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCylinderResponse")]
        void CreateNewCylinder(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder cylinder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewCylinder", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewCylinderResponse")]
        System.Threading.Tasks.Task CreateNewCylinderAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder cylinder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllTrucks", ReplyAction="http://tempuri.org/IPLMPackService/GetAllTrucksResponse")]
        treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck[] GetAllTrucks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/GetAllTrucks", ReplyAction="http://tempuri.org/IPLMPackService/GetAllTrucksResponse")]
        System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck[]> GetAllTrucksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewTruck", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewTruckResponse")]
        void CreateNewTruck(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck truck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPLMPackService/CreateNewTruck", ReplyAction="http://tempuri.org/IPLMPackService/CreateNewTruckResponse")]
        System.Threading.Tasks.Task CreateNewTruckAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck truck);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool showAllGroups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOfInterest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOther;
        
        public GetGroupsListRequest() {
        }
        
        public GetGroupsListRequest(bool showAllGroups, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOfInterest, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOther) {
            this.showAllGroups = showAllGroups;
            this.groupsOfInterest = groupsOfInterest;
            this.groupsOther = groupsOther;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOfInterest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOther;
        
        public GetGroupsListResponse() {
        }
        
        public GetGroupsListResponse(treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOfInterest, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOther) {
            this.groupsOfInterest = groupsOfInterest;
            this.groupsOther = groupsOther;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiskQuota", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDiskQuotaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long noFiles;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long spaceUsed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long diskQuota;
        
        public GetDiskQuotaRequest() {
        }
        
        public GetDiskQuotaRequest(long noFiles, long spaceUsed, long diskQuota) {
            this.noFiles = noFiles;
            this.spaceUsed = spaceUsed;
            this.diskQuota = diskQuota;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiskQuotaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDiskQuotaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetDiskQuotaResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long noFiles;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long spaceUsed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public long diskQuota;
        
        public GetDiskQuotaResponse() {
        }
        
        public GetDiskQuotaResponse(bool GetDiskQuotaResult, long noFiles, long spaceUsed, long diskQuota) {
            this.GetDiskQuotaResult = GetDiskQuotaResult;
            this.noFiles = noFiles;
            this.spaceUsed = spaceUsed;
            this.diskQuota = diskQuota;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPLMPackServiceChannel : treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PLMPackServiceClient : System.ServiceModel.ClientBase<treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService>, treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService {
        
        public PLMPackServiceClient() {
        }
        
        public PLMPackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PLMPackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMPackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMPackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string get_UserName() {
            return base.Channel.get_UserName();
        }
        
        public System.Threading.Tasks.Task<string> get_UserNameAsync() {
            return base.Channel.get_UserNameAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCUser GetUser() {
            return base.Channel.GetUser();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCUser> GetUserAsync() {
            return base.Channel.GetUserAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCUser Connect() {
            return base.Channel.Connect();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCUser> ConnectAsync() {
            return base.Channel.ConnectAsync();
        }
        
        public void DisConnect() {
            base.Channel.DisConnect();
        }
        
        public System.Threading.Tasks.Task DisConnectAsync() {
            return base.Channel.DisConnectAsync();
        }
        
        public bool UserExists(string name) {
            return base.Channel.UserExists(name);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(string name) {
            return base.Channel.UserExistsAsync(name);
        }
        
        public string EmailToUserName(string email) {
            return base.Channel.EmailToUserName(email);
        }
        
        public System.Threading.Tasks.Task<string> EmailToUserNameAsync(string email) {
            return base.Channel.EmailToUserNameAsync(email);
        }
        
        public string UserNameToEmail(string userName) {
            return base.Channel.UserNameToEmail(userName);
        }
        
        public System.Threading.Tasks.Task<string> UserNameToEmailAsync(string userName) {
            return base.Channel.UserNameToEmailAsync(userName);
        }
        
        public bool SendLostPasswordEmail(string userName) {
            return base.Channel.SendLostPasswordEmail(userName);
        }
        
        public System.Threading.Tasks.Task<bool> SendLostPasswordEmailAsync(string userName) {
            return base.Channel.SendLostPasswordEmailAsync(userName);
        }
        
        public int get_UserSettingMajoRounding() {
            return base.Channel.get_UserSettingMajoRounding();
        }
        
        public System.Threading.Tasks.Task<int> get_UserSettingMajoRoundingAsync() {
            return base.Channel.get_UserSettingMajoRoundingAsync();
        }
        
        public void set_UserSettingMajoRounding(int value) {
            base.Channel.set_UserSettingMajoRounding(value);
        }
        
        public System.Threading.Tasks.Task set_UserSettingMajoRoundingAsync(int value) {
            return base.Channel.set_UserSettingMajoRoundingAsync(value);
        }
        
        public bool CreateUser(string userName, string password, string firstName, string lastName, string email, string country, string city, string phoneNumber, string companyName, string webSiteURL) {
            return base.Channel.CreateUser(userName, password, firstName, lastName, email, country, city, phoneNumber, companyName, webSiteURL);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(string userName, string password, string firstName, string lastName, string email, string country, string city, string phoneNumber, string companyName, string webSiteURL) {
            return base.Channel.CreateUserAsync(userName, password, firstName, lastName, email, country, city, phoneNumber, companyName, webSiteURL);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup CreateGroup(string name, string description) {
            return base.Channel.CreateGroup(name, description);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> CreateGroupAsync(string name, string description) {
            return base.Channel.CreateGroupAsync(name, description);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup GetCurrentGroup() {
            return base.Channel.GetCurrentGroup();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> GetCurrentGroupAsync() {
            return base.Channel.GetCurrentGroupAsync();
        }
        
        public void SetCurrentGroupByID(string grpId) {
            base.Channel.SetCurrentGroupByID(grpId);
        }
        
        public System.Threading.Tasks.Task SetCurrentGroupByIDAsync(string grpId) {
            return base.Channel.SetCurrentGroupByIDAsync(grpId);
        }
        
        public void SetCurrentGroup(treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup grp) {
            base.Channel.SetCurrentGroup(grp);
        }
        
        public System.Threading.Tasks.Task SetCurrentGroupAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup grp) {
            return base.Channel.SetCurrentGroupAsync(grp);
        }
        
        public void AddInterest(string grpId) {
            base.Channel.AddInterest(grpId);
        }
        
        public System.Threading.Tasks.Task AddInterestAsync(string grpId) {
            return base.Channel.AddInterestAsync(grpId);
        }
        
        public void RemoveInterest(string grpId) {
            base.Channel.RemoveInterest(grpId);
        }
        
        public System.Threading.Tasks.Task RemoveInterestAsync(string grpId) {
            return base.Channel.RemoveInterestAsync(grpId);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup GetGroupByName(string grpName) {
            return base.Channel.GetGroupByName(grpName);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> GetGroupByNameAsync(string grpName) {
            return base.Channel.GetGroupByNameAsync(grpName);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup GetGroupEveryone() {
            return base.Channel.GetGroupEveryone();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup> GetGroupEveryoneAsync() {
            return base.Channel.GetGroupEveryoneAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] GetUserGroups() {
            return base.Channel.GetUserGroups();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[]> GetUserGroupsAsync() {
            return base.Channel.GetUserGroupsAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] GetAllGroups() {
            return base.Channel.GetAllGroups();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[]> GetAllGroupsAsync() {
            return base.Channel.GetAllGroupsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListResponse treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService.GetGroupsList(treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListRequest request) {
            return base.Channel.GetGroupsList(request);
        }
        
        public void GetGroupsList(bool showAllGroups, ref treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOfInterest, ref treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup[] groupsOther) {
            treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListRequest inValue = new treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListRequest();
            inValue.showAllGroups = showAllGroups;
            inValue.groupsOfInterest = groupsOfInterest;
            inValue.groupsOther = groupsOther;
            treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListResponse retVal = ((treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService)(this)).GetGroupsList(inValue);
            groupsOfInterest = retVal.groupsOfInterest;
            groupsOther = retVal.groupsOther;
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListResponse> GetGroupsListAsync(treeDiM.PLMPack.DBClient.PLMPackSR.GetGroupsListRequest request) {
            return base.Channel.GetGroupsListAsync(request);
        }
        
        public void AddUserToCurrentGroup(string name) {
            base.Channel.AddUserToCurrentGroup(name);
        }
        
        public System.Threading.Tasks.Task AddUserToCurrentGroupAsync(string name) {
            return base.Channel.AddUserToCurrentGroupAsync(name);
        }
        
        public void RemoveUserFromCurrentGroup(treeDiM.PLMPack.DBClient.PLMPackSR.DCUser dcUser) {
            base.Channel.RemoveUserFromCurrentGroup(dcUser);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromCurrentGroupAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCUser dcUser) {
            return base.Channel.RemoveUserFromCurrentGroupAsync(dcUser);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat[] GetAllCardboardFormats() {
            return base.Channel.GetAllCardboardFormats();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat[]> GetAllCardboardFormatsAsync() {
            return base.Channel.GetAllCardboardFormatsAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat GetCardboardFormatByID(int id) {
            return base.Channel.GetCardboardFormatByID(id);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> GetCardboardFormatByIDAsync(int id) {
            return base.Channel.GetCardboardFormatByIDAsync(id);
        }
        
        public bool CardboardFormatExists(string name) {
            return base.Channel.CardboardFormatExists(name);
        }
        
        public System.Threading.Tasks.Task<bool> CardboardFormatExistsAsync(string name) {
            return base.Channel.CardboardFormatExistsAsync(name);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat GetCardboardFormatByName(string name) {
            return base.Channel.GetCardboardFormatByName(name);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> GetCardboardFormatByNameAsync(string name) {
            return base.Channel.GetCardboardFormatByNameAsync(name);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat CreateNewCardboardFormat(string name, string description, double length, double width) {
            return base.Channel.CreateNewCardboardFormat(name, description, length, width);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> CreateNewCardboardFormatAsync(string name, string description, double length, double width) {
            return base.Channel.CreateNewCardboardFormatAsync(name, description, length, width);
        }
        
        public void RemoveCardboardFormat(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat) {
            base.Channel.RemoveCardboardFormat(cbFormat);
        }
        
        public System.Threading.Tasks.Task RemoveCardboardFormatAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat) {
            return base.Channel.RemoveCardboardFormatAsync(cbFormat);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat UpdateCardboardFormat(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat) {
            return base.Channel.UpdateCardboardFormat(cbFormat);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat> UpdateCardboardFormatAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboadFormat cbFormat) {
            return base.Channel.UpdateCardboardFormatAsync(cbFormat);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile[] GetAllCardboardProfile() {
            return base.Channel.GetAllCardboardProfile();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile[]> GetAllCardboardProfileAsync() {
            return base.Channel.GetAllCardboardProfileAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile GetCardboardProfileByID(int id) {
            return base.Channel.GetCardboardProfileByID(id);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> GetCardboardProfileByIDAsync(int id) {
            return base.Channel.GetCardboardProfileByIDAsync(id);
        }
        
        public bool CardboardProfileExists(string name) {
            return base.Channel.CardboardProfileExists(name);
        }
        
        public System.Threading.Tasks.Task<bool> CardboardProfileExistsAsync(string name) {
            return base.Channel.CardboardProfileExistsAsync(name);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile GetCardboardProfileByName(string name) {
            return base.Channel.GetCardboardProfileByName(name);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> GetCardboardProfileByNameAsync(string name) {
            return base.Channel.GetCardboardProfileByNameAsync(name);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile CreateNewCardboardProfile(string name, string description, string code, double thickness) {
            return base.Channel.CreateNewCardboardProfile(name, description, code, thickness);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> CreateNewCardboardProfileAsync(string name, string description, string code, double thickness) {
            return base.Channel.CreateNewCardboardProfileAsync(name, description, code, thickness);
        }
        
        public void RemoveCardboardProfile(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile) {
            base.Channel.RemoveCardboardProfile(cbProfile);
        }
        
        public System.Threading.Tasks.Task RemoveCardboardProfileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile) {
            return base.Channel.RemoveCardboardProfileAsync(cbProfile);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile UpdateCardboardProfile(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile) {
            return base.Channel.UpdateCardboardProfile(cbProfile);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile> UpdateCardboardProfileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile) {
            return base.Channel.UpdateCardboardProfileAsync(cbProfile);
        }
        
        public void MoveCardboardProfile(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile, treeDiM.PLMPack.DBClient.PLMPackSR.eMoveDir dir) {
            base.Channel.MoveCardboardProfile(cbProfile, dir);
        }
        
        public System.Threading.Tasks.Task MoveCardboardProfileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile cbProfile, treeDiM.PLMPack.DBClient.PLMPackSR.eMoveDir dir) {
            return base.Channel.MoveCardboardProfileAsync(cbProfile, dir);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCFile CreateNewFile(System.Guid g, string ext, long size) {
            return base.Channel.CreateNewFile(g, ext, size);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCFile> CreateNewFileAsync(System.Guid g, string ext, long size) {
            return base.Channel.CreateNewFileAsync(g, ext, size);
        }
        
        public bool FileQuotaReached(long fileSize) {
            return base.Channel.FileQuotaReached(fileSize);
        }
        
        public System.Threading.Tasks.Task<bool> FileQuotaReachedAsync(long fileSize) {
            return base.Channel.FileQuotaReachedAsync(fileSize);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaResponse treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService.GetDiskQuota(treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaRequest request) {
            return base.Channel.GetDiskQuota(request);
        }
        
        public bool GetDiskQuota(ref long noFiles, ref long spaceUsed, ref long diskQuota) {
            treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaRequest inValue = new treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaRequest();
            inValue.noFiles = noFiles;
            inValue.spaceUsed = spaceUsed;
            inValue.diskQuota = diskQuota;
            treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaResponse retVal = ((treeDiM.PLMPack.DBClient.PLMPackSR.IPLMPackService)(this)).GetDiskQuota(inValue);
            noFiles = retVal.noFiles;
            spaceUsed = retVal.spaceUsed;
            diskQuota = retVal.diskQuota;
            return retVal.GetDiskQuotaResult;
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaResponse> GetDiskQuotaAsync(treeDiM.PLMPack.DBClient.PLMPackSR.GetDiskQuotaRequest request) {
            return base.Channel.GetDiskQuotaAsync(request);
        }
        
        public System.Guid UploadDefault(string defName, string fileExt) {
            return base.Channel.UploadDefault(defName, fileExt);
        }
        
        public System.Threading.Tasks.Task<System.Guid> UploadDefaultAsync(string defName, string fileExt) {
            return base.Channel.UploadDefaultAsync(defName, fileExt);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail CreateNewThumbnailFromFile(treeDiM.PLMPack.DBClient.PLMPackSR.DCFile file) {
            return base.Channel.CreateNewThumbnailFromFile(file);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> CreateNewThumbnailFromFileAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCFile file) {
            return base.Channel.CreateNewThumbnailFromFileAsync(file);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail CreateNewThumbnail(System.Guid g, string ext) {
            return base.Channel.CreateNewThumbnail(g, ext);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> CreateNewThumbnailAsync(System.Guid g, string ext) {
            return base.Channel.CreateNewThumbnailAsync(g, ext);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail GetDefaultThumbnail(string defName) {
            return base.Channel.GetDefaultThumbnail(defName);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> GetDefaultThumbnailAsync(string defName) {
            return base.Channel.GetDefaultThumbnailAsync(defName);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail GetThumbnailById(int thumbnailId) {
            return base.Channel.GetThumbnailById(thumbnailId);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail> GetThumbnailByIdAsync(int thumbnailId) {
            return base.Channel.GetThumbnailByIdAsync(thumbnailId);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[] GetRootNodes() {
            return base.Channel.GetRootNodes();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[]> GetRootNodesAsync() {
            return base.Channel.GetRootNodesAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode GetUserRootNode() {
            return base.Channel.GetUserRootNode();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> GetUserRootNodeAsync() {
            return base.Channel.GetUserRootNodeAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode GetNodeById(System.Guid id) {
            return base.Channel.GetNodeById(id);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> GetNodeByIdAsync(System.Guid id) {
            return base.Channel.GetNodeByIdAsync(id);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[] GetTreeNodeChildrens(System.Guid id) {
            return base.Channel.GetTreeNodeChildrens(id);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[]> GetTreeNodeChildrensAsync(System.Guid id) {
            return base.Channel.GetTreeNodeChildrensAsync(id);
        }
        
        public bool CanCreateChildNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name) {
            return base.Channel.CanCreateChildNode(parentNode, name);
        }
        
        public System.Threading.Tasks.Task<bool> CanCreateChildNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name) {
            return base.Channel.CanCreateChildNodeAsync(parentNode, name);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode CreateNewNodeBranch(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb) {
            return base.Channel.CreateNewNodeBranch(parentNode, name, description, thumb);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> CreateNewNodeBranchAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb) {
            return base.Channel.CreateNewNodeBranchAsync(parentNode, name, description, thumb);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode CreateNewNodeDocument(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile dFile) {
            return base.Channel.CreateNewNodeDocument(parentNode, name, description, thumb, dFile);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> CreateNewNodeDocumentAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile dFile) {
            return base.Channel.CreateNewNodeDocumentAsync(parentNode, name, description, thumb, dFile);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode CreateNewNodeComponent(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile compFile, System.Guid compGuid, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet[] majorationSets, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] defaultValues) {
            return base.Channel.CreateNewNodeComponent(parentNode, name, description, thumb, compFile, compGuid, majorationSets, defaultValues);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode> CreateNewNodeComponentAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode parentNode, string name, string description, treeDiM.PLMPack.DBClient.PLMPackSR.DCThumbnail thumb, treeDiM.PLMPack.DBClient.PLMPackSR.DCFile compFile, System.Guid compGuid, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet[] majorationSets, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] defaultValues) {
            return base.Channel.CreateNewNodeComponentAsync(parentNode, name, description, thumb, compFile, compGuid, majorationSets, defaultValues);
        }
        
        public void DeleteNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode) {
            base.Channel.DeleteNode(dcNode);
        }
        
        public System.Threading.Tasks.Task DeleteNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode) {
            return base.Channel.DeleteNodeAsync(dcNode);
        }
        
        public void DeleteNodeByID(System.Guid tnID) {
            base.Channel.DeleteNodeByID(tnID);
        }
        
        public System.Threading.Tasks.Task DeleteNodeByIDAsync(System.Guid tnID) {
            return base.Channel.DeleteNodeByIDAsync(tnID);
        }
        
        public void RenameNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string name) {
            base.Channel.RenameNode(dcNode, name);
        }
        
        public System.Threading.Tasks.Task RenameNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string name) {
            return base.Channel.RenameNodeAsync(dcNode, name);
        }
        
        public void RenameNodeByID(System.Guid tnID, string name, string description) {
            base.Channel.RenameNodeByID(tnID, name, description);
        }
        
        public System.Threading.Tasks.Task RenameNodeByIDAsync(System.Guid tnID, string name, string description) {
            return base.Channel.RenameNodeByIDAsync(tnID, name, description);
        }
        
        public void ShareTreeNode(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup dcGroup) {
            base.Channel.ShareTreeNode(dcNode, dcGroup);
        }
        
        public System.Threading.Tasks.Task ShareTreeNodeAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, treeDiM.PLMPack.DBClient.PLMPackSR.DCGroup dcGroup) {
            return base.Channel.ShareTreeNodeAsync(dcNode, dcGroup);
        }
        
        public void ShareEveryone(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode) {
            base.Channel.ShareEveryone(dcNode);
        }
        
        public System.Threading.Tasks.Task ShareEveryoneAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode) {
            return base.Channel.ShareEveryoneAsync(dcNode);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[] GetBrothersWithExtension(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string extension) {
            return base.Channel.GetBrothersWithExtension(dcNode, extension);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode[]> GetBrothersWithExtensionAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCTreeNode dcNode, string extension) {
            return base.Channel.GetBrothersWithExtensionAsync(dcNode, extension);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCComponent GetComponentByGuid(System.Guid g) {
            return base.Channel.GetComponentByGuid(g);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCComponent> GetComponentByGuidAsync(System.Guid g) {
            return base.Channel.GetComponentByGuidAsync(g);
        }
        
        public void UpdateParamDefaultValues(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] paramDefaultValue) {
            base.Channel.UpdateParamDefaultValues(g, paramDefaultValue);
        }
        
        public System.Threading.Tasks.Task UpdateParamDefaultValuesAsync(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] paramDefaultValue) {
            return base.Channel.UpdateParamDefaultValuesAsync(g, paramDefaultValue);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[] GetParamDefaultValues(System.Guid g) {
            return base.Channel.GetParamDefaultValues(g);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCParamDefaultValue[]> GetParamDefaultValuesAsync(System.Guid g) {
            return base.Channel.GetParamDefaultValuesAsync(g);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet UpdateMajorationSet(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet majorationSet) {
            return base.Channel.UpdateMajorationSet(g, majorationSet);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet> UpdateMajorationSetAsync(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet majorationSet) {
            return base.Channel.UpdateMajorationSetAsync(g, majorationSet);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet GetMajorationSet(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile profile) {
            return base.Channel.GetMajorationSet(g, profile);
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCMajorationSet> GetMajorationSetAsync(System.Guid g, treeDiM.PLMPack.DBClient.PLMPackSR.DCCardboardProfile profile) {
            return base.Channel.GetMajorationSetAsync(g, profile);
        }
        
        public bool ItemExists(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, string name) {
            return base.Channel.ItemExists(eType, name);
        }
        
        public System.Threading.Tasks.Task<bool> ItemExistsAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, string name) {
            return base.Channel.ItemExistsAsync(eType, name);
        }
        
        public void SetAutoInsert(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID, bool autoInsert) {
            base.Channel.SetAutoInsert(eType, itemID, autoInsert);
        }
        
        public System.Threading.Tasks.Task SetAutoInsertAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID, bool autoInsert) {
            return base.Channel.SetAutoInsertAsync(eType, itemID, autoInsert);
        }
        
        public void RemoveItemById(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID) {
            base.Channel.RemoveItemById(eType, itemID);
        }
        
        public System.Threading.Tasks.Task RemoveItemByIdAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTypeEnum eType, int itemID) {
            return base.Channel.RemoveItemByIdAsync(eType, itemID);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet[] GetAllPallets() {
            return base.Channel.GetAllPallets();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet[]> GetAllPalletsAsync() {
            return base.Channel.GetAllPalletsAsync();
        }
        
        public void CreateNewPallet(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet pallet) {
            base.Channel.CreateNewPallet(pallet);
        }
        
        public System.Threading.Tasks.Task CreateNewPalletAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPallet pallet) {
            return base.Channel.CreateNewPalletAsync(pallet);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap[] GetAllPalletCaps() {
            return base.Channel.GetAllPalletCaps();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap[]> GetAllPalletCapsAsync() {
            return base.Channel.GetAllPalletCapsAsync();
        }
        
        public void CreateNewPalletCap(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap palletCap) {
            base.Channel.CreateNewPalletCap(palletCap);
        }
        
        public System.Threading.Tasks.Task CreateNewPalletCapAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCap palletCap) {
            return base.Channel.CreateNewPalletCapAsync(palletCap);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm[] GetAllPalletFilms() {
            return base.Channel.GetAllPalletFilms();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm[]> GetAllPalletFilmsAsync() {
            return base.Channel.GetAllPalletFilmsAsync();
        }
        
        public void CreateNewPalletFilm(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm palletFilm) {
            base.Channel.CreateNewPalletFilm(palletFilm);
        }
        
        public System.Threading.Tasks.Task CreateNewPalletFilmAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletFilm palletFilm) {
            return base.Channel.CreateNewPalletFilmAsync(palletFilm);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner[] GetAllPalletCorners() {
            return base.Channel.GetAllPalletCorners();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner[]> GetAllPalletCornersAsync() {
            return base.Channel.GetAllPalletCornersAsync();
        }
        
        public void CreateNewPalletCorner(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner palletCorner) {
            base.Channel.CreateNewPalletCorner(palletCorner);
        }
        
        public System.Threading.Tasks.Task CreateNewPalletCornerAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBPalletCorner palletCorner) {
            return base.Channel.CreateNewPalletCornerAsync(palletCorner);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer[] GetAllInterlayers() {
            return base.Channel.GetAllInterlayers();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer[]> GetAllInterlayersAsync() {
            return base.Channel.GetAllInterlayersAsync();
        }
        
        public void CreateNewInterlayer(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer interlayer) {
            base.Channel.CreateNewInterlayer(interlayer);
        }
        
        public System.Threading.Tasks.Task CreateNewInterlayerAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBInterlayer interlayer) {
            return base.Channel.CreateNewInterlayerAsync(interlayer);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[] GetAllCases() {
            return base.Channel.GetAllCases();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[]> GetAllCasesAsync() {
            return base.Channel.GetAllCasesAsync();
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[] GetAllBoxes() {
            return base.Channel.GetAllBoxes();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase[]> GetAllBoxesAsync() {
            return base.Channel.GetAllBoxesAsync();
        }
        
        public void CreateNewCase(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase sbCase) {
            base.Channel.CreateNewCase(sbCase);
        }
        
        public System.Threading.Tasks.Task CreateNewCaseAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCase sbCase) {
            return base.Channel.CreateNewCaseAsync(sbCase);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle[] GetAllBundles() {
            return base.Channel.GetAllBundles();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle[]> GetAllBundlesAsync() {
            return base.Channel.GetAllBundlesAsync();
        }
        
        public void CreateNewBundle(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle bundle) {
            base.Channel.CreateNewBundle(bundle);
        }
        
        public System.Threading.Tasks.Task CreateNewBundleAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBBundle bundle) {
            return base.Channel.CreateNewBundleAsync(bundle);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder[] GetAllCylinders() {
            return base.Channel.GetAllCylinders();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder[]> GetAllCylindersAsync() {
            return base.Channel.GetAllCylindersAsync();
        }
        
        public void CreateNewCylinder(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder cylinder) {
            base.Channel.CreateNewCylinder(cylinder);
        }
        
        public System.Threading.Tasks.Task CreateNewCylinderAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBCylinder cylinder) {
            return base.Channel.CreateNewCylinderAsync(cylinder);
        }
        
        public treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck[] GetAllTrucks() {
            return base.Channel.GetAllTrucks();
        }
        
        public System.Threading.Tasks.Task<treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck[]> GetAllTrucksAsync() {
            return base.Channel.GetAllTrucksAsync();
        }
        
        public void CreateNewTruck(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck truck) {
            base.Channel.CreateNewTruck(truck);
        }
        
        public System.Threading.Tasks.Task CreateNewTruckAsync(treeDiM.PLMPack.DBClient.PLMPackSR.DCSBTruck truck) {
            return base.Channel.CreateNewTruckAsync(truck);
        }
    }
}
