<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StackBuilderSchema"
    targetNamespace="http://www.treedim.com/StackBuilderSchema.xsd"
    elementFormDefault="qualified"
    xmlns="http://www.treedim.com/StackBuilderSchema.xsd"
    xmlns:mstns="http://www.treedim.com/StackBuilderSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <!-- BEGIN STACKBUILDER Format Schema -->
  <xs:annotation>
    <xs:documentation>
      PLMPack STACKBUILDER input Schema
      Version 1.0.6.0 (September, 2011)

      Note that this software document is distributed on an "AS IS" basis, with ALL EXPRESS AND
      IMPLIED WARRANTIES AND CONDITIONS DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED
      WARRANTIES AND CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR
      PURPOSE, AND NON-INFRINGEMENT.
    </xs:documentation>
  </xs:annotation>
  <!-- import needed for xml:base attribute-->
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
  <!-- Simple Types-->
  <!-- Primitive Types-->
  <xs:simpleType name="bool">
    <xs:restriction base="xs:boolean"/>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:restriction base="xs:dateTime"/>
  </xs:simpleType>
  <xs:simpleType name="float">
    <xs:restriction base="xs:double"/>
  </xs:simpleType>
  <xs:simpleType name="int">
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="Name">
    <xs:restriction base="xs:Name"/>
  </xs:simpleType>
  <xs:simpleType name="string">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!-- Container Types -->
  <xs:simpleType name="ListOfBools">
    <xs:list itemType="bool"/>
  </xs:simpleType>
  <xs:simpleType name="ListOfFloats">
    <xs:list itemType="float"/>
  </xs:simpleType>
  <xs:simpleType name="ListOfHexBinary">
    <xs:list itemType="xs:hexBinary"/>
  </xs:simpleType>
  <xs:simpleType name="ListOfInts">
    <xs:list itemType="int"/>
  </xs:simpleType>
  <xs:simpleType name="ListOfNames">
    <xs:list itemType="Name"/>
  </xs:simpleType>
  <xs:simpleType name="int2">
    <xs:restriction base="ListOfInts">
      <xs:minLength value="2"/>
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="float2">
    <xs:restriction base="ListOfFloats">
      <xs:minLength value="2"/>
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="float3">
    <xs:restriction base="ListOfFloats">
      <xs:minLength value="3"/>
      <xs:maxLength value="3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Axis">
    <xs:annotation>
      <xs:documentation>
        An enumerated type specifying the acceptable axis values.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="XX"/>
      <xs:enumeration value="YY"/>
      <xs:enumeration value="ZZ"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="AxisDir">
    <xs:annotation>
      <xs:documentation>
        An enumerated type specifying the acceptable oriented axis values.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="XN"/>
      <xs:enumeration value="XP"/>
      <xs:enumeration value="YN"/>
      <xs:enumeration value="YP"/>
      <xs:enumeration value="ZN"/>
      <xs:enumeration value="ZP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PatternName">
    <xs:annotation>
      <xs:documentation>
        An enumerated type specifying the layer pattern.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="COLUMN"/>
      <xs:enumeration value="INTERLOCK"/>
      <xs:enumeration value="TRILOCK"/>
      <xs:enumeration value="DIAGONAL"/>
      <xs:enumeration value="SPIRAL"/>
      <xs:enumeration value="ENLARGED_SPIRAL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ListOfPatterns">
    <xs:list itemType="PatternName"/>
  </xs:simpleType>
  <xs:simpleType name="LayerArrangement">
    <xs:annotation>
      <xs:documentation>
        An enumerated type specifying the layer arrangement.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALIGNED"/>
      <xs:enumeration value="ROTATED90"/>
      <xs:enumeration value="ROTATED180"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ListOfLayerArrangements">
    <xs:list itemType="LayerArrangement"/>
  </xs:simpleType>
  <xs:simpleType name="palletType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BLOCK"/>
      <xs:enumeration value="STANDARD_UK"/>
      <xs:enumeration value="GMA"/>
      <xs:enumeration value="EUR"/>
      <xs:enumeration value="EUR2"/>
      <xs:enumeration value="EUR3"/>
      <xs:enumeration value="EUR6"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="imageFormat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BMP"/>
      <xs:enumeration value="JPG"/>
      <xs:enumeration value="GIF"/>
      <xs:enumeration value="PNG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="reportFormat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="WORDML"/>
      <xs:enumeration value="HTML"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pointOfViewValue">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FRONT"/>
      <xs:enumeration value="BACK"/>
      <xs:enumeration value="LEFT"/>
      <xs:enumeration value="RIGHT"/>
      <xs:enumeration value="TOP"/>
      <xs:enumeration value="CORNER0"/>
      <xs:enumeration value="CORNER1"/>
      <xs:enumeration value="CORNER2"/>
      <xs:enumeration value="CORNER3"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- Complex types -->
  <xs:element name="FaceColor">
    <xs:annotation>
      <xs:documentation>
        Defines a color on a specific face.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="FaceNormal" type="AxisDir" use="required"/>
      <xs:attribute name="color" type="xs:hexBinary" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="FaceTexture">
    <xs:annotation>
      <xs:documentation>
        Defines a texture on a specific face.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="FaceNormal" type="AxisDir" use="required"/>
      <xs:attribute name="Position" type="float2" use="required"/>
      <xs:attribute name="Size" type="float2" use="required"/>
      <xs:attribute name="Angle" type="float" use="required"/>
      <xs:attribute name="Bitmap" type="string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="FaceColors">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="FaceColor" minOccurs="6" maxOccurs="6"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FaceTextures">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="FaceTexture" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--box-->
  <xs:element name="box">
    <xs:annotation>
      <xs:documentation>
        A box is an element contained by a case.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="FaceColors" minOccurs="1" maxOccurs="1"/>
        <xs:element ref="FaceTextures" minOccurs="1" maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="dimensions" type="float3" use="required"/>
      <xs:attribute name="weight" type="float" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--case-->
  <xs:element name="case">
    <xs:annotation>
      <xs:documentation>
        A case is an element that can be stacked on a pallet.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="FaceColors" minOccurs="1" maxOccurs="1"/>
        <xs:element ref="FaceTextures" minOccurs="1" maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="outerdimensions" type="float3" use="required"/>
      <xs:attribute name="innerDimensions" type="float3" use="optional"/>
      <xs:attribute name="weight" type="float" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--bundle-->
  <xs:element name="bundle">
    <xs:complexType>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="flatDimensions" type="float3" use="required"/>
      <xs:attribute name="flatWeight" type="float" use="required"/>
      <xs:attribute name="numberFlats" type="int" use="required"/>
      <xs:attribute name="color" type="xs:hexBinary" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--interlayer-->
  <xs:element name="interlayer">
    <xs:complexType>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="dimensions" type="float3" use="required"/>
      <xs:attribute name="weight" type="float" use="required"/>
      <xs:attribute name="color" type="xs:hexBinary" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--pallet-->
  <xs:element name="pallet">
    <xs:annotation>
      <xs:documentation>
        A pallet is an element on which case are stacked.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="dimensions" type="float3" use="required"/>
      <xs:attribute name="type" type="palletType" use="required"/>
      <xs:attribute name="weight" type="float" use="required"/>
      <xs:attribute name="color" type="xs:hexBinary" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--truck-->
  <xs:element name="truck">
    <xs:annotation>
      <xs:documentation>
        A truck is a container on which pallet solutions are stacked.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="dimensions" type="float3" use="required"/>
      <xs:attribute name="color" type="xs:hexBinary" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- libraries-->
  <xs:element name="library_boxes">
    <xs:annotation>
      <xs:documentation>
        The library_boxes element declares a module of box elements.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="box" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="library_cases">
    <xs:annotation>
      <xs:documentation>
        The library_cases element declares a module of case elements.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="case" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="library_bundles">
    <xs:annotation>
      <xs:documentation>
        The library_bundles element declares a module of bundle elements.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="bundle" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="library_interlayers">
    <xs:annotation>
      <xs:documentation>
        The library_interlayers element declares a module of interlayer elements.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="interlayer" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="library_pallets">
    <xs:annotation>
      <xs:documentation>
        The library_pallets element declares a module of pallet elements.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="pallet" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="library_trucks">
    <xs:annotation>
      <xs:documentation>
        The library_trucks element declares a module of truck elements.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="truck" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Stop stacking criterions-->
  <xs:element name="stopMaxHeight">
    <xs:complexType>
      <xs:attribute name="maxHeight" type="float"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="stopMaxWeight">
    <xs:complexType>
      <xs:attribute name="maxWeight" type="float"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="stopMaxNumber">
    <xs:complexType>
      <xs:attribute name="maxNumber" type="int"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="stopMaxWeightOnCase">
    <xs:complexType>
      <xs:attribute name="maxWeightOnCase" type="float"/>
    </xs:complexType>
  </xs:element>
  <!-- Analyses -->
  <xs:element name="palletAnalysis">
    <xs:annotation>
      <xs:documentation>
        Stacking a case/bundle on a pallet.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="stackingStopCriterions" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="stopMaxHeight" minOccurs="0" maxOccurs="1"/>
              <xs:element ref="stopMaxWeight" minOccurs="0" maxOccurs="1"/>
              <xs:element ref="stopMaxNumber" minOccurs="0" maxOccurs="1"/>
              <xs:element ref="stopMaxWeightOnCase" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="id" type="xs:NCName" use="required"/>
      <xs:attribute name="name" type="string" use="required"/>
      <xs:attribute name="description" type="string" use="optional"/>
      <xs:attribute name="caseId" type="xs:NCName" use="optional"/>
      <xs:attribute name="bundleId" type="xs:NCName" use="optional"/>
      <xs:attribute name="palletId" type="xs:NCName" use="required"/>
      <xs:attribute name="interlayerId" type="xs:NCName" use="optional"/>
      <xs:attribute name ="interlayerPeriod" type="int" use="optional"/>
      <xs:attribute name="overhang" type="float2" use="optional"/>
      <xs:attribute name="allowedLayerPatterns" type="ListOfPatterns" use="optional"/>
      <xs:attribute name="allowedLayerArrangements" type="ListOfLayerArrangements" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="truckAnalysis">
    <xs:annotation>
      <xs:documentation>
        Stacking a pallet solution on a truck.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="caseAnalysis">
    <xs:annotation>
      <xs:documentation>
        Finding out the best way to fill a list of case among a set of case/pallet analysis solutions.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="caseOptimisation">
    <xs:annotation>
      <xs:documentation>
        Finding out the best way to arrange a number of box for best pallet stacking.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <!-- Output -->
  <xs:element name="viewParameters">
    <xs:complexType>
      <xs:attribute name="imageSize" type="int2" use="required"/>
      <xs:attribute name="path" type="xs:string" use="required"/>
      <xs:attribute name="format" type="imageFormat" use="required"/>
      <xs:attribute name="showDimensions" type="bool" use="optional"/>
      <xs:attribute name="predefinedPointOfView" type="pointOfViewValue" use="optional"/>
      <xs:attribute name="azimuth" type="float" use="optional"/>
      <xs:attribute name="eleation" type="float" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="reportParameters">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="description" type="xs:string" use="optional"/>
      <xs:attribute name="author" type="xs:string" use="required"/>
      <xs:attribute name="templateDir" type="xs:string" use="required"/>
      <xs:attribute name="outputPath" type="xs:string" use="required"/>
      <xs:attribute name="format" type="reportFormat" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="viewItem">
    <xs:annotation>
      <xs:documentation>
        Specifies a case/bundle/interlayer/pallet view
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref ="viewParameters" minOccurs="1" maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="itemId" type="xs:NCName" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="solutionRef">
    <xs:annotation>
      <xs:documentation>
        Refers a pallet analysis solution.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="analysisId" type="xs:NCName" use="required"/>
      <xs:attribute name="index" type="int" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="analysisRef">
    <xs:annotation>
      <xs:documentation>
        Refers to a pallet analysis.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="analysisId" type="xs:NCName" use="required"/>
      <xs:attribute name="selectedSolutionIndex" type="int" use="optional"/>
    </xs:complexType>
  </xs:element>
  <!--viewSolution-->
  <xs:element name="viewSolution">
    <xs:annotation>
      <xs:documentation>
        Specifies a pallet solution view
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="solutionRef" minOccurs="1" maxOccurs="1"/>
        <xs:element ref="viewParameters" minOccurs="1" maxOccurs="1"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--reportSolution-->
  <xs:element name="reportSolution">
    <xs:annotation>
      <xs:documentation>
        Specifies a pallet solution report
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="solutionRef" minOccurs="1" maxOccurs="1"/>
        <xs:element ref="reportParameters" minOccurs="1" maxOccurs="1"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="analysisSolutionList">
    <xs:annotation>
      <xs:documentation>
        Pallet solution list.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
      </xs:sequence>
      <xs:attribute name="path" type="xs:string" use="required"/>
      <xs:attribute name="analysisId" type="xs:NCName" use="required"/>
      <xs:attribute name="maxNumberOfSolutions" type="int" use="optional"/>
    </xs:complexType>
  </xs:element>
  <!-- Document -->
  <xs:element name="genDocument">
    <xs:annotation>
      <xs:documentation>
        Specifies a project file to be generated and opened
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="analysisRef" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="description" type="xs:string" use="required"/>
      <xs:attribute name="path" type="xs:string" use="required"/>
      <xs:attribute name="author" type="xs:string" use="optional"/>
      <xs:attribute name="open" type="xs:boolean" use="optional"/>
     </xs:complexType>
  </xs:element>
  <!-- Root element-->
  <xs:element name="STACKBUILDER">
    <xs:annotation>
      <xs:appinfo>enable-xmlns</xs:appinfo>
      <xs:documentation>
        The STACKBUILDER element declares the root of the document that comprises some of the content of the STACKBUILDER schema.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="data" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              The data element defines the data of the problem.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="items" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element ref="library_boxes" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="library_cases" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="library_pallets" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="library_interlayers" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="library_bundles" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="library_trucks" minOccurs="0" maxOccurs="1"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="analyses" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element ref="palletAnalysis" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="truckAnalysis" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="caseAnalysis" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="caseOptimisation" minOccurs="0" maxOccurs="unbounded"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="output" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              The output element defines the requested output.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="analysisSolutionList" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element ref="viewItem" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element ref="viewSolution" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element ref="reportSolution" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element ref="genDocument" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
