<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
	<data name="bnOK.Location" type="System.Drawing.Point, System.Drawing">
		<value>489, 8</value>
	</data>
	<data name="bnOK.Size" type="System.Drawing.Size, System.Drawing">
		<value>87, 22</value>
	</data>
	<data name="bnCancel.Location" type="System.Drawing.Point, System.Drawing">
		<value>489, 34</value>
	</data>
	<data name="bnCancel.Size" type="System.Drawing.Size, System.Drawing">
		<value>87, 22</value>
	</data>
	<data name="tbDescription.Size" type="System.Drawing.Size, System.Drawing">
		<value>396, 20</value>
	</data>
	<data name="bnOK.Text" xml:space="preserve">
		<value>[OK]</value>
	</data>
	<data name="toolStripStatusLabelDef.Text" xml:space="preserve">
		<value>toolStripStatusLabelDef</value>
	</data>
	<data name="cbColor.Items14" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items8" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items46" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items33" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="gbFaceColor.Text" xml:space="preserve">
		<value>顔の色</value>
	</data>
	<data name="cbColor.Items5" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items21" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items16" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items51" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items24" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items35" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="btBitmaps.Text" xml:space="preserve">
		<value>ビットマップ...</value>
	</data>
	<data name="cbColor.Items53" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items38" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items40" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items9" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="lbDescription.Text" xml:space="preserve">
		<value>説明</value>
	</data>
	<data name="cbColor.Items10" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items52" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items42" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="chkAllFaces.Text" xml:space="preserve">
		<value>すべての面では同じ色です。</value>
	</data>
	<data name="cbColor.Items47" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items12" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items3" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items31" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items17" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items2" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbFace.Items" xml:space="preserve">
		<value>リア</value>
	</data>
	<data name="cbColor.Items49" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="lbFace.Text" xml:space="preserve">
		<value>顔</value>
	</data>
	<data name="cbColor.Items26" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items50" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items19" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items34" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items6" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items20" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items48" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items7" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items36" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items22" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items43" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items27" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items15" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items13" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items45" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbFace.Items5" xml:space="preserve">
		<value>トップ</value>
	</data>
	<data name="cbFace.Items4" xml:space="preserve">
		<value>下</value>
	</data>
	<data name="cbFace.Items3" xml:space="preserve">
		<value>左</value>
	</data>
	<data name="cbFace.Items2" xml:space="preserve">
		<value>右</value>
	</data>
	<data name="cbFace.Items1" xml:space="preserve">
		<value>前</value>
	</data>
	<data name="cbColor.Items29" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items30" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="bnCancel.Text" xml:space="preserve">
		<value>キャンセル</value>
	</data>
	<data name="lbName.Text" xml:space="preserve">
		<value>の名前</value>
	</data>
	<data name="cbColor.Items28" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items32" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items18" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items37" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items23" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="statusStripDef.Text" xml:space="preserve">
		<value>statusStripDef</value>
	</data>
	<data name="cbColor.Items39" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items4" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items41" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items25" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="$this.Text" xml:space="preserve">
		<value>箱またはケースの色/テクスチャを編集して...</value>
	</data>
	<data name="cbColor.Items1" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items11" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items44" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items55" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="cbColor.Items56" xml:space="preserve">
		<value>カラー</value>
	</data>
	<data name="lbBox.Text" xml:space="preserve">
		<value>ボックス</value>
	</data>
	<data name="checkedListBoxPatterns.Items" xml:space="preserve">
		<value>カラム</value>
	</data>
	<data name="gbAllowedLayerPatterns.Text" xml:space="preserve">
		<value>許可された層パターン</value>
	</data>
	<data name="checkBoxAllowAlignedLayer.Text" xml:space="preserve">
		<value>整列レイヤーを許可する</value>
	</data>
	<data name="checkBoxMaximumNumberOfBoxes.Text" xml:space="preserve">
		<value>箱の数に達するときの</value>
	</data>
	<data name="lbPallet.Text" xml:space="preserve">
		<value>パレット</value>
	</data>
	<data name="lbSolutions.Text" xml:space="preserve">
		<value>最良の解決策（S）</value>
	</data>
	<data name="gbAllowedBoxPositions.Text" xml:space="preserve">
		<value>許可されたボックスの位置</value>
	</data>
	<data name="checkBoxPositionX.Text" xml:space="preserve">
		<value>X</value>
	</data>
	<data name="checkBoxMaximumCaseWeight.Text" xml:space="preserve">
		<value>総重量が以下に達する場合</value>
	</data>
	<data name="checkBoxPositionZ.Text" xml:space="preserve">
		<value>Z</value>
	</data>
	<data name="gbStopStackingCondition.Text" xml:space="preserve">
		<value>追加のストップスタッキング状態</value>
	</data>
	<data name="checkedListBoxPatterns.Items3" xml:space="preserve">
		<value>トリロック</value>
	</data>
	<data name="checkedListBoxPatterns.Items2" xml:space="preserve">
		<value>対角</value>
	</data>
	<data name="checkedListBoxPatterns.Items1" xml:space="preserve">
		<value>インタロックした</value>
	</data>
	<data name="checkedListBoxPatterns.Items4" xml:space="preserve">
		<value>スパイラル</value>
	</data>
	<data name="lbFilterSolutions.Text" xml:space="preserve">
		<value>ソリューションを維持する</value>
	</data>
	<data name="lbStopStacking.Text" xml:space="preserve">
		<value>スタッキング停止します。</value>
	</data>
	<data name="checkBoxPositionY.Text" xml:space="preserve">
		<value>Y</value>
	</data>
	<data name="checkBoxMinNumberOfItems.Text" xml:space="preserve">
		<value>最低限、ケースに含まれる</value>
	</data>
	<data name="gbSolutionFiltering.Text" xml:space="preserve">
		<value>追加のデータ</value>
	</data>
	<data name="lbBoxes.Text" xml:space="preserve">
		<value>ボックス</value>
	</data>
	<data name="checkBoxAllowAlternateLayer.Text" xml:space="preserve">
		<value>別の層を許可する</value>
	</data>
	<data name="checkBoxKeepSolutions.Text" xml:space="preserve">
		<value>の間にあることを</value>
	</data>
	<data name="lbKg1.Text" xml:space="preserve">
		<value>キロ</value>
	</data>
</root>